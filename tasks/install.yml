---

- name: Add Mosquitto repository
  become: yes
  apt_repository:
    repo: ppa:mosquitto-dev/mosquitto-ppa
    state: present
    update_cache: yes
    validate_certs: no

- name: Ensure Mosquitto service is installed
  become: yes
  apt:
    name: "mosquitto={{ sansible_mosquitto_version }}"
    state: present

- name: Ensure Mosquitto clients
  become: yes
  apt:
    name: "mosquitto-clients={{ sansible_mosquitto_version }}"
    state: present
  when: sansible_mosquitto_install_clients

- name: Install Pip for boto
  become: yes
  apt:
    name: python-pip
  when: sansible_mosquitto_aws_enabled

- name: Install boto
  become: yes
  pip:
    name: boto
  when: sansible_mosquitto_aws_enabled

- name: Add ulimits to Upstart config
  become: yes
  lineinfile:
    line: "limit nofile {{ sansible_mosquitto_limits_nofile_soft }} {{ sansible_mosquitto_limits_nofile_hard }}"
    dest: /etc/init/mosquitto.conf
    regexp: "^limit nofile"
    create: yes
  when: ansible_service_mgr == 'upstart'
  notify:
    - restart mosquitto

- name: Locate Mosquitto SystemdD conf
  shell: |
    set -o pipefail
    dpkg -L mosquitto | grep mosquitto.service
  args:
    executable: /bin/bash
  register: sansible_mosquitto_systemd_conf_file_location
  changed_when: no
  when: ansible_service_mgr == 'systemd'

- name: Add Mosquitto SystemD settings
  become: yes
  ini_file:
    option: "{{ item.key }}"
    path: "{{ sansible_mosquitto_systemd_conf_file_location.stdout }}"
    section: Service
    value: "{{ item.value }}"
  with_dict:
    LimitNOFILE: "{{ sansible_mosquitto_limits_nofile_hard }}"
  register: sansible_mosquitto_systemd_conf_file
  when: ansible_service_mgr == 'systemd'

- name: Ensure Mosquitto SystemD service is updated
  become: yes
  systemd:
    daemon_reload: yes
  when:
    - ansible_service_mgr == "systemd"
    - sansible_mosquitto_systemd_conf_file.changed
  tags:
    - skip_ansible_lint
